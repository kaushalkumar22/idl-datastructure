@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.lowlevelsystemdesign.meetingscheduler.MeetingSchedulerMain",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1699019101 { 
   	label=lowlevelsystemdesign
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_676788561 { 
   	label=meetingscheduler
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Meeting1652848292[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Meeting</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   endTime: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   notifications: List&lt;Notification&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   organizer: User [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   participants: List&lt;User&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   room: MeetingRoom [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startTime: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   title: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeetingRoom1652848292[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeetingRoom</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   capacity: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   roomId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   roomName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeetingScheduler1652848292[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeetingScheduler</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   meetingRooms: List&lt;MeetingRoom&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   meetings: List&lt;Meeting&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   roomIdIdVsSchedule: Map&lt;String, TreeMap&lt;Date, Date&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   simpleDateFormat: SimpleDateFormat [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRoom(room: MeetingRoom): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancelMeeting(meeting: Meeting)</TD></TR>
<TR><TD ALIGN="LEFT" >- isMeetingRoomAvailable(roomId: String, newStart: Date, newEnd: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ listMeetings(): List&lt;Meeting&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeRoom(room: MeetingRoom): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ rescheduleMeeting(meeting: Meeting, newStartDate: Date, newEndDate: Date)</TD></TR>
<TR><TD ALIGN="LEFT" >+ scheduleMeeting(title: String, startTime: Date, endTime: Date, organizer: User, participants: List&lt;User&gt;, room: MeetingRoom)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeetingSchedulerMain1652848292[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeetingSchedulerMain</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Notification1652848292[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Notification</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ sendNotification(emailId: String, message: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

User1652848292[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)User</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   emailId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
Meeting1652848292 -> MeetingRoom1652848292[label="room
[0..1]"];
Meeting1652848292 -> Notification1652848292[label="notifications
[0..*]"];
Meeting1652848292 -> User1652848292[label="organizer
[0..1]"];
Meeting1652848292 -> User1652848292[label="participants
[0..*]"];
MeetingScheduler1652848292 -> Meeting1652848292[label="meetings
[0..*]"];
MeetingScheduler1652848292 -> MeetingRoom1652848292[label="meetingRooms
[0..*]"];
    
}
@enduml